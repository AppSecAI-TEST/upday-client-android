apply plugin: 'com.android.application'
apply from: getRootDir().absolutePath + '/dependenciesVersions.gradle'


buildscript {
    // Repositories and dependencies needed by plugins
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.3.1'
    }
}
apply plugin: 'me.tatarka.retrolambda'

def global = rootProject.extensions.getByName("ext")
android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    defaultConfig {
        applicationId "com.axelspringer.upday"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    productFlavors {
        def BASE_ENDPOINT = "BASE_URL"
        prod {
            buildConfigField "String", BASE_ENDPOINT, global.prod.baseUrl
        }

        dev {
            buildConfigField "String", BASE_ENDPOINT, global.dev.baseUrl
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile "com.android.support.constraint:constraint-layout:${androidConstraintsVersion}"
    // Architecture components
    compile "android.arch.lifecycle:runtime:${androidArchCompVersion}"
    compile "android.arch.lifecycle:extensions:${androidArchCompVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${androidArchCompVersion}"
    // Support
    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"
    compile "com.android.support:recyclerview-v7:${androidSupportVersion}"
    compile "com.android.support:design:${androidSupportVersion}"
    // Debug
    compile("com.squareup.okhttp3:logging-interceptor:${okHttpVersion}") {
        exclude module: 'okhttp'
    }
    // Rx
    compile "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    // Network
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile("com.squareup.retrofit2:converter-gson:${retrofitVersion}")
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    // View injection
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    // Dependency injection
    compile "com.google.dagger:dagger-android:${daggerVersion}"
//    compile "com.google.dagger:dagger-android-support:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    // Tests
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
